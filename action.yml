name: Silverbackltd Build Action
author: 'ApeWorX Ltd.'
description: 'A GitHub Action to build docker images for a silverback repository and push to a container registry'
branding:
  icon: 'check-circle'
  color: 'green'

inputs:
  push:
    description: 'Push the image to the configured registry.'
    required: false
    default: 'false'
  # TODO: Change this to `version` in a breaking change
  tag:
    description: 'Tag of the silverback docker images.'
    required: false
    default: 'latest'
  registry:
    description: 'The registry location you want to push to.'
    required: false
    default: 'ghcr.io'
  username:
    description: 'Add your username for your registry.'
    required: false
  password:
    description: 'Add your password for your registry.'
    required: false

outputs:
  built_images:
    description: 'List of Docker images that were built and pushed.'

runs:
  using: 'composite'
  steps:
    - name: Confirm inputs
      if: inputs.push == 'true'
      run: |
        if [[ -z "${{ inputs.username }}" ]] || [[ -z "${{ inputs.password }}" ]]; then
          echo "::error::Username and/or Password are missing for the push to the container registry"
          exit 1
        fi
      shell: bash

    - name: Set TAG_BASE
      run: |
        LOWERCASE_REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
        echo "TAG_BASE='${{ inputs.registry }}/$LOWERCASE_REPO_NAME'" >> $GITHUB_ENV
      shell: bash

    # TODO: Can this be done using a Docker image instead?
    - name: Install Silverback
      run: pip install "git+https://github.com/ApeWorX/silverback.git@fix/build/setuptools-scm-version"
      shell: bash

    - name: Log into GitHub Container Registry
      if: inputs.push == 'true'
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Build and Push
      run: silverback build --generate --tag-base ${{ env.TAG_BASE }} --version ${{ inputs.tag }} ${{ inputs.push == 'true' && '--push' || ''}}
      shell: bash
