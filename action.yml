name: Silverbackltd Build Action
author: 'ApeWorX Ltd.'
description: 'A GitHub Action to build docker images for a silverback repository and push to a container registry'
branding:
  icon: 'check-circle'
  color: 'green'

inputs:
  push:
    description: 'Push the image to ghcr'
    required: false
    default: 'false'
  tag:
    description: 'Tag of the silverback docker images'
    required: false
    default: 'latest'
  registry:
    description: 'The registry location you want to push to.'
    required: false
    default: 'ghcr.io'
  username:
    description: 'Add your username for your registry'
    required: false
    default: ${{ github.actor }}
  password:
    description: 'Add your password for your registry'
    required: false
    default: ''

outputs:
  built_images:
    description: 'List of Docker images that were built and pushed.'

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v4

    - name: Set Environment Variables
      run: |
        echo "IMAGE_NAME=${{ github.repository }}" >> $GITHUB_ENV
        echo "TARGET_DIR=./.silverback-images" >> $GITHUB_ENV
        echo "DOCKERFILE_PATTERN=Dockerfile.*" >> $GITHUB_ENV
        echo "GITHUB_EVENT_NAME=${{ github.event_name }}" >> $GITHUB_ENV
        echo "GITHUB_REF=${{ github.ref }}" >> $GITHUB_ENV
      shell: bash

    - name: Check if Directory Exists
      id: check_dir
      run: |
        if [ -d "${{ env.TARGET_DIR }}" ]; then
          echo "Directory exists."
          echo "directory_exists=true" >> $GITHUB_OUTPUT
        else
          echo "Directory does not exist. Creating..."
          mkdir -p "${{ env.TARGET_DIR }}"
          echo "directory_exists=false" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Set Lowercase Repository Owner
      id: lowercase_owner
      run: |
        LOWERCASE_OWNER=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
        echo "LOWERCASE_OWNER=$LOWERCASE_OWNER" >> $GITHUB_ENV
      shell: bash

    - name: Generate Files
      id: gen_files
      if: steps.check_dir.outputs.directory_exists == 'false'
      run: |
        pip install silverback
        silverback build --generate
      shell: bash

    - name: Verify Dockerfiles Exist
      run: |
        if [ ! -d "${{ env.TARGET_DIR }}" ]; then
          echo "Directory '${{ env.TARGET_DIR }}' does not exist. Exiting."
          exit 1
        fi
      shell: bash

    - name: Log into GitHub Container Registry
      if: ${{ inputs.push == 'true' }}
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Build and Push
      run: |
        # Find all Dockerfiles matching the pattern
        dockerfiles=$(find "${{ env.TARGET_DIR }}" -type f -name "${{ env.DOCKERFILE_PATTERN }}" | sort)
        echo "Found Dockerfiles:"
        echo "${dockerfiles}"

        dockerfile_array=()
        for df in $dockerfiles; do
          name=$(basename "$df" | sed 's/Dockerfile\.//')
          reg_tag=${{ inputs.registry }}/${{ env.LOWERCASE_OWNER }}/${name}:${{ inputs.tag }}
          docker build -t "$reg_tag" -f "$df" .
          if [[ ${{ inputs.push == 'true' }} ]]; then
            docker push "$reg_tag"
          fi
        done
      shell: bash
